D

Q.
스택(stack)은 리스트의 한쪽 끝에서 자료의 삽입과 제거가 일어나는 자료구조이다. 보통 자료를 삽입하는 연산을 push, 제거하는 연산을 pop이라 한다. 또한, 연산이 일어나는 위치를 가리키는 포인터를 스택 포인터라 부르며 sp로 나타낸다. 정수를 저장할 수 있는 스택을 배열로 사용하여 다음과 같이 구현할 수 있다.

class Stack {
    private int[] stack;
    int sp = -1;
    public Stack(int size){
        stack = new int[size];
    }
    public void Push(int data) {
        // ...
    }
    public int Pop() {
        // ...
    }
}


(1)
디폴트 생성자를 작성하시오. 이 경우에 스택의 크기는 100이다.

(2)
메소드 Push()와 Pop()을 작성하시오.

(3)
클래스 Stack을 이용하여 일련의 정수 입력(입력의 끝은 0)을 역순으로 출력하는 C# 프로그램을 작성하시오.

A.
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Es04_13
{
    class Stack
    {
        private int[] stack;
        private int sp = -1;
        public Stack()
        {
            stack = new int[100];  //스택의 크기는 100
        }
        public Stack(int size) //일련의 정수 입력(입력의 끝은 0)을 역순으로 출력
        {
            stack = new int[size];
        }

        public void Push(int data)  //Push
        {
            stack[++sp] = data;
        }

        public int Pop() //Pop
        {
            return stack[sp--];
        }

        public int GetStackPointer()  //스택 포인터
        {
            return sp;
        }
    }

    class Program
    {
        static void Main(string[] args)
        {
            Stack a = new Stack();

            a.Push(1);
            a.Push(2);
            a.Push(3);

            while (a.GetStackPointer() != -1)
            {
                Console.WriteLine(a.Pop());
            }
            Console.ReadLine();
        }
    }
}